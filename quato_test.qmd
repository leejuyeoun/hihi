---
title: "Quarto PRACTICE"
format:
    html:
        toc: true # 목차 표시
        toc-depth: 3 # 목차 깊이 설정
        number-sections: true # 섹션 번호 추가
        theme: journal # HTML 테마 스타일 (예: cosmo, darkl
        code-fold: true # 코드 접기 버튼 추가
highlight-style : breeze
jupyter: python3
search : True
---

# 제목 1 (h1)

문서를 작성한 후 아래 단축키를 누르면 *반영된 결과*를 볼 수 ~~있습니다.~~ 있어요\~\
**preview 단축키 : cntrl + shift + k**

## 제목 2 (h2)

글 중간에 목록을 삽입하고 싶은 경우

-   아이템 1
-   아이템 2
    -   서브 아이템 1
    -   서브 아이템 2

순서가 있는 목록을 삽입할 수 있습니다. (1번으로 다 넣어도 순서에 따라 알아서 번호 생성됨)

1.  파이썬 패키지
    1.  판다스
    2.  넘파이
2.  R 언어 패키지
    1.  Dplyr
    2.  ggplot

### 제목 3 (h3)

문의사항은 [슬기로운 통계생활](http://statple.com)로 문의주세요!

이미지 삽입하는 방법 ![](https://lab.statisticsplaybook.com/wp-content/uploads/2025/02/lab-main2.png) 현재 작업하는 폴더 안에 저장된 그림 삽입하기(컴퓨터에 저장된거) ![](sltonglogo.webp)

### 표 삽입

| 이름   | 나이 | 직업          |
|--------|------|---------------|
| 홍길동 | 25   | 데이터 분석가 |
| 이몽룡 | 30   | 개발자        |

### 수식 입력

문장 안에 들어가는 수식은 달러 기호 한개씩 왼 오에 사용합니다. 이렇게 $E = mc^2$ 말이죠!

만약, 수식만 따로 문단을 만들어서 보여주고 싶은 경우는 달러 기호 2개를 사용합니다.

$$
E = mc^2
$$

이렇게 말이죠!

$$
\begin{aligned}
a &= b + c \\
&= d + e + f
\end{aligned}
$$

알아두기!

-   `\\` \<- 줄바꿈을 의미
-   `&` \<- 정렬 기준을 의미

## Quarto의 존재 이유

파이썬 코드 청크를 삽입할 수 있다.

-   단축키 : ctrl + shift + i

```{python}
import numpy as np
a = np.arange(10)
a

```

## 비주얼 모드에서 편집하기

우리가 이렇게 문장을 바로 쓰면 ***서식이 적용***되어 나옵니다

`ctrl + d`

### 테이블 넣기

| Col1  | Col2 | Col3 |
|-------|------|------|
| 항목1 |      |      |
| 항목2 |      |      |
| 항목3 |      |      |

# 이모티콘 입력 방법

콜론 두개 사이에 원하는 이모지의 영어를 입력하면 검색 및 삽입 가능
-
:smile:


부리 길이 변수의 결측치 개체수는 '{python} int(na_check.iloc[2])'개 입니다. 


# 청크 옵션  

* #| echo: false  <- 결과만 보여주기

```{python}
#| echo: false
import numpy as np
a = np.arange(10)
a
```

<br>

```{python}
#| code-fold: true
#| error: true
# 의도적인 에러 발생 (존재하지 않는 변수)
print(undefined_variable)
```

<br> 
quarto 그래프 옵션 

```{python}
#| fig-width: 3
#| fig-height: 5
#| fig-align: center
#| fig-cap: "사인 함수 플롯"
import numpy as np
import matplotlib.pyplot as plt

x = np.linspace(0, 10, 100)
y = np.cos(x)

plt.figure(figsize=(6, 4))
plt.plot(x, y, label="cos(x)", color="red")
plt.legend()
plt.grid(True)
plt.show()
```

<br>

- y는 x^2의 그래프를 -10에서 10까지 그려보세요!

```{python}
#| fig-width: 3
#| fig-height: 5
#| fig-align: center
#| fig-cap: "y=x^2 그래프프"
#| 
import numpy as np
import matplotlib.pyplot as plt

x = np.linspace(-10, 10, 100)
y = x ** 2

plt.figure(figsize=(6, 4))
plt.plot(x, y, label="x^2)", color="red")
plt.legend()
plt.grid(True)
plt.show()
```


